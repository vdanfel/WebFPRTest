@model WebFPRTest.Models.LoginViewModel
@{
}
<section class="vh-100 d-flex align-items-center justify-content-center fondo-login">
    <div class="container-fluid">
        <div class="row d-flex justify-content-center align-items-md-center h-100">
            <div class="col-10 col-sm-10 col-md-8 col-lg-7 col-xl-5 mt-5 mt-sm-5 mt-md-0">
                <form asp-action="Login" asp-controller="Login" method="post">
                    
                    <div class="card border-danger border-2 shadow">
                        <div class="card-header text-center">
                            <img src="https://raw.githubusercontent.com/vdanfel/WebFPRTest/main/LogoCardLogin.svg" style="width:100%" class="my-0 my-sm-0 my-md-2 my-lg-3" />
                        </div>
                        <div class="card-body">
                            <div class="row mt-3">
                                <div class="input-group">
                                    <span class="input-group-text">
                                        <i class="bi-person-vcard"></i>
                                    </span>
                                    <div class="form-floating">
                                        <input type="text" class="form-control" placeholder="Usuario" id="Usuario" asp-for="@Model.Usuario" required />
                                        <label for="Usuario">Usuario</label>
                                    </div>
                                </div>
                            </div>
                            <div class="row mt-5 mb-3">
                                <div class="input-group">
                                    <span class="input-group-text">
                                        <i class="bi-key"></i>
                                    </span>
                                    <div class="form-floating">
                                        <input type="password" class="form-control" placeholder="Clave" id="Clave" asp-for="@Model.Clave" required />
                                        <label for="Clave">Clave</label>
                                    </div>
                                    <button type="button" class="btn" id="btnMostrar"
                                            style="border-color: #dee2e6;background-color: #f8f9fa;" onclick="MostrarOcultar()">
                                        <i class="bi-eye"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                        <div class="card-footer">
                            <div class="row justify-content-between m-auto">
                                <div class="col">
                                    <button class="btn btn-outline-success">
                                        Ingresar
                                    </button>
                                </div>
                                @* <div class="col text-end align-self-end">
                                    <a href="#">
                                        <span>Olvidó Contraseña</span>
                                    </a>
                                </div> *@
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</section>
 <style>
    .fondo-login {
        background: url('https://i.imgur.com/pe118e4.jpg') no-repeat center fixed;
        background-size: cover;
    }
</style> 
@if (!string.IsNullOrEmpty(ViewBag.Mensaje as string))
{
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-body">
                    @ViewBag.Mensaje
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                </div>
            </div>
        </div>
    </div>
}
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
<script src="//code.jquery.com/jquery-1.11.0.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const contentDivs = document.querySelectorAll('[contenteditable][required]');
        contentDivs.forEach((div) => {
            validateContent(div.id);
        });

        // Selecciona todos los inputs y selects con atributo `required`
        const inputs = document.querySelectorAll('input[required], select[required]');

        inputs.forEach((input) => {
            // Agrega un evento `input` para validar en tiempo real
            input.addEventListener('input', function () {
                if (input.checkValidity()) {
                    input.classList.remove('is-invalid');
                    input.classList.add('is-valid');
                } else {
                    input.classList.remove('is-valid');
                    input.classList.add('is-invalid');
                }
            });

            // Aplica la validación al salir del campo
            input.addEventListener('blur', function () {
                if (input.checkValidity()) {
                    input.classList.remove('is-invalid');
                    input.classList.add('is-valid');
                } else {
                    input.classList.remove('is-valid');
                    input.classList.add('is-invalid');
                }
            });
        });

        // Aplica un borde rojo inicial para campos requeridos vacíos
        inputs.forEach((input) => {
            if (!input.value) {
                input.classList.add('is-invalid');
            }
        });
    });
    function validateContent(id) {
        const contentDiv = document.getElementById(id);

        // Verifica si el contenido está vacío
        if (contentDiv.textContent.trim() === "") {
            contentDiv.classList.remove('is-valid');
            contentDiv.classList.add('is-invalid');
        } else {
            contentDiv.classList.remove('is-invalid');
            contentDiv.classList.add('is-valid');
            // Llamamos a la función saveContent pasando el id del div
            saveContent(id); // Pasa el id, no el objeto DOM completo
        }
    }

    var mensajeError = '@ViewBag.Mensaje';
    if (mensajeError && mensajeError.trim() !== '') {
        $(window).on('load', function () {
            $('#myModal').modal('show');
        });
    }

    function MostrarOcultar() {
        const claveInput = document.getElementById("Clave");
        const icono = document.getElementById("icono");

        // Verificar el tipo actual del input
        if (claveInput.type === "password") {
            claveInput.type = "text"; // Cambiar a texto para mostrar la clave
            icono.classList.remove("bi-eye"); // Cambiar el ícono
            icono.classList.add("bi-eye-slash");
        } else {
            claveInput.type = "password"; // Cambiar a password para ocultarla
            icono.classList.remove("bi-eye-slash"); // Restaurar el ícono
            icono.classList.add("bi-eye");
        }
    }
</script>