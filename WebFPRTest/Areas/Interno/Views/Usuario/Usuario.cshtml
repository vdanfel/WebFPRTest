@model WebFPRTest.Areas.Interno.Models.Usuario.UsuarioViewModel
@{
    Layout = "_LayoutInterno";
}
<form asp-controller="Usuario" asp-action="Usuario" method="post">
    <input type="text" asp-for="Id_Usuario" id="Id_Usuario" hidden/>
    <input type="text" asp-for="Id_Persona" id="Id_Persona" hidden/>
    <div class="container">
        <div class="row mt-2 g-2">
            <div class="col-12 col-sm-12 col-md-6 col-lg-3">
                <div class="form-floating">
                    <select class="form-select" asp-for="Id_001_TipoDocumento" id="Id_001_TipoDocumento" onchange="ValidarPersona()" required>
                        <option></option>
                        @foreach (var tipoDocumento in Model.TipoDocumentoList)
                        {
                            <option value="@tipoDocumento.Id_Parametros">@tipoDocumento.Abreviatura</option>
                        }
                    </select>
                    <label>Tipo Documento</label>
                </div>
            </div>
            <div class="col-12 col-sm-12 col-md-6 col-lg-3">
                <div class="form-floating">
                    <input type="text" id="Documento" class="form-control" asp-for="Documento" onblur="ValidarPersona()" required />
                    <label for="Documento">N° Documento</label>
                </div>
            </div>
            <div class="col-12 col-sm-12 col-md-6 col-lg-3">
                <div class="form-floating">
                    <input type="text" id="Paterno" class="form-control" asp-for="Paterno" required />
                    <label for="Paterno">Paterno</label>
                </div>
            </div>
            <div class="col-12 col-sm-12 col-md-6 col-lg-3">
                <div class="form-floating">
                    <input type="text" id="Materno" class="form-control" asp-for="Materno" required />
                    <label for="Materno">Materno</label>
                </div>
            </div>
            <div class="col-12 col-sm-12 col-md-6 col-lg-6">
                <div class="form-floating">
                    <input type="text" id="Nombres" class="form-control" asp-for="Nombres" required />
                    <label for="Nombres">Nombres</label>
                </div>
            </div>
            <div class="col-12 col-sm-12 col-md-6 col-lg-6">
                <div class="form-floating">
                    <input type="text" id="Correo" class="form-control" asp-for="Correo" required />
                    <label for="Correo">N° Correo</label>
                </div>
            </div>
            <div class="col-12 col-sm-12 col-md-6 col-lg-3">
                <div class="form-floating">
                    <input type="text" id="Celular" class="form-control" asp-for="Celular" required />
                    <label for="Celular">Celular</label>
                </div>
            </div>
            <div class="col-12 col-sm-12 col-md-6 col-lg-3">

                <div class="form-floating">
                    <select class="form-select" asp-for="Id_011_TipoUsuario" id="Id_011_TipoUsuario" required>
                        <option></option>
                        @foreach (var tipoUsuario in Model.TipoUsuarioList)
                        {
                            <option value="@tipoUsuario.Id_Parametros">@tipoUsuario.Descripcion</option>
                        }
                    </select>
                    <label>Tipo Usuario</label>
                </div>
            </div>
            <div class="col-12 col-sm-12 col-md-6 col-lg-3">
                <div class="form-floating">
                    <input type="text" id="Usuario" class="form-control" asp-for="Usuario" required />
                    <label for="Usuario">Usuario</label>
                </div>
            </div>
            <div class="col-12 col-sm-12 col-md-6 col-lg-3">
                <div class="form-floating">
                    <input type="password" id="Clave" class="form-control" asp-for="Clave" onblur="validarClaves()" />
                    <label for="Clave">Clave</label>
                </div>
            </div>
            <div class="col-12 col-sm-12 col-md-6 col-lg-3">
                <div class="form-floating">
                    <input type="password" id="ClaveConfirmacion" class="form-control" asp-for="ClaveConfirmacion" onblur="validarClaves()" />
                    <label for="ClaveConfirmacion">Confirmar Clave</label>
                </div>
            </div>
            <div class="col-12 col-sm-12 col-md-6 col-lg-6">
                <div class="form-floating">
                    <select class="form-select" asp-for="Id_Equipo" id="Id_Equipo">
                        <option></option>
                        @foreach (var listaEquipos in Model.EquiposList)
                        {
                            <option value="@listaEquipos.Id_Equipo">@listaEquipos.Nombre</option>
                        }
                    </select>
                    <label for="Id_Equipo">Equipo</label>
                </div>
            </div>
        </div>
        <div class="mt-2">
            <button type="submit" class="btn btn-outline-success" id="btnRegistrar" disabled>Registrar</button>
            <a class="btn btn-outline-danger"
               onclick="mostrarModalEliminar('@Url.Action("Usuario_Eliminar", "Usuario", new { area = "Interno", Id_Usuario = Model.Id_Usuario })', '@Model.Usuario')">
                <i class="bi bi-trash"></i>
            </a>


            <button type="button" class="btn btn-outline-secondary">Regresar</button>
        </div>
    </div>
</form>
<!-- Modal para el mensaje de del TempData -->
@if (TempData["Mensaje"] != null)
{
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-body">
                    @TempData["Mensaje"]
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                </div>
            </div>
        </div>
    </div>
}
<!-- Modal de Error Claves-->
<div class="modal fade" id="modalErrorClave" tabindex="-1" aria-labelledby="modalErrorLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalErrorLabel">Error</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Las claves ingresadas no coinciden. Por favor, verifique.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal de confirmación para eliminar usuario -->
<div class="modal fade" id="modalEliminarUsuario" tabindex="-1" role="dialog" aria-labelledby="modalEliminarUsuarioLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body">
                <p id="mensajeConfirmacion"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-danger" id="btnConfirmarEliminar">Eliminar</button>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
<script src="//code.jquery.com/jquery-1.11.0.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        validarClaves();
        var mensaje = '@TempData["Mensaje"]';
        if (mensaje && mensaje.trim() !== '') {
            $('#myModal').modal('show');
        }

        const contentDivs = document.querySelectorAll('[contenteditable][required]');
        contentDivs.forEach((div) => {
            validateContent(div.id);
        });

        // Selecciona todos los inputs y selects con atributo `required`
        const inputs = document.querySelectorAll('input[required], select[required]');

        inputs.forEach((input) => {
            // Agrega un evento `input` para validar en tiempo real
            input.addEventListener('input', function () {
                if (input.checkValidity()) {
                    input.classList.remove('is-invalid');
                    input.classList.add('is-valid');
                } else {
                    input.classList.remove('is-valid');
                    input.classList.add('is-invalid');
                }
            });

            // Aplica la validación al salir del campo
            input.addEventListener('blur', function () {
                if (input.checkValidity()) {
                    input.classList.remove('is-invalid');
                    input.classList.add('is-valid');
                } else {
                    input.classList.remove('is-valid');
                    input.classList.add('is-invalid');
                }
            });
        });

        // Aplica un borde rojo inicial para campos requeridos vacíos
        inputs.forEach((input) => {
            if (!input.value) {
                input.classList.add('is-invalid');
            }
        });
    });

    function mostrarModalEliminar(url, nombreUsuario) {
        // Establecer el mensaje en el modal
        document.getElementById("mensajeConfirmacion").innerText =
            "¿Está seguro que desea eliminar al usuario " + nombreUsuario + "?";

        // Guardar la URL en un atributo del botón
        document.getElementById("btnConfirmarEliminar").setAttribute("data-url", url);

        // Mostrar el modal
        $("#modalEliminarUsuario").modal("show");
    }
    
    document.getElementById("btnConfirmarEliminar").addEventListener("click", function () {
        var url = this.getAttribute("data-url");

        // Redirigir a la acción de eliminación
        window.location.href = url;
    });
    

    function ValidarPersona()
    {
        var idTipoDocumento = $("#Id_001_TipoDocumento").val();
        var documento = $("#Documento").val();
        if (idTipoDocumento && documento)
        {
            $.get("/Interno/Usuario/ValidarPersona", { idTipoDocumento: idTipoDocumento, documento: documento }, function (data)
            {
                if (data) {
                    // Si la persona existe, llenar los campos
                    $("#Id_Persona").val(data.id_Persona);
                    $("#Paterno").val(data.paterno);
                    $("#Materno").val(data.materno);
                    $("#Nombres").val(data.nombres);
                    $("#Celular").val(data.celular);
                    $("#Correo").val(data.correo);
                    }
            });
        }
    }
    function validarClaves() {
        var clave = document.getElementById("Clave").value;
        var claveConfirmacion = document.getElementById("ClaveConfirmacion").value;
        var btnRegistrar = document.getElementById("btnRegistrar");
        var modalElement = document.getElementById("modalErrorClave");
        var modalInstance = bootstrap.Modal.getInstance(modalElement) || new bootstrap.Modal(modalElement);

        // Si ambos están vacíos, habilitar el botón
        if ((clave === "" || clave === null) && (claveConfirmacion === "" || claveConfirmacion === null)) {
            btnRegistrar.disabled = false;
        } else if (clave !== "" && claveConfirmacion !== "" && clave !== claveConfirmacion) {
            // Si las claves no coinciden y el modal no está visible, mostrar el modal
            if (!modalElement.classList.contains("show")) {
                modalInstance.show();
            }
            btnRegistrar.disabled = true;
        } else {
            // Si las claves coinciden, habilitar el botón
            btnRegistrar.disabled = false;
        }
    }
    
    function validateContent(id) {
        const contentDiv = document.getElementById(id);

        // Verifica si el contenido está vacío
        if (contentDiv.textContent.trim() === "") {
            contentDiv.classList.remove('is-valid');
            contentDiv.classList.add('is-invalid');
        } else {
            contentDiv.classList.remove('is-invalid');
            contentDiv.classList.add('is-valid');
            // Llamamos a la función saveContent pasando el id del div
            saveContent(id); // Pasa el id, no el objeto DOM completo
        }
    }

    var mensajeError = '@ViewBag.Mensaje';
    if (mensajeError && mensajeError.trim() !== '') {
        $(window).on('load', function () {
            $('#myModal').modal('show');
        });
    }

    function MostrarOcultar() {
        const claveInput = document.getElementById("Clave");
        const icono = document.getElementById("icono");

        // Verificar el tipo actual del input
        if (claveInput.type === "password") {
            claveInput.type = "text"; // Cambiar a texto para mostrar la clave
            icono.classList.remove("bi-eye"); // Cambiar el ícono
            icono.classList.add("bi-eye-slash");
        } else {
            claveInput.type = "password"; // Cambiar a password para ocultarla
            icono.classList.remove("bi-eye-slash"); // Restaurar el ícono
            icono.classList.add("bi-eye");
        }
    }
</script>